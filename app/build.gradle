plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.erkindilekci.cryptobalancetracker'
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        applicationId "com.erkindilekci.cryptobalancetracker"
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion ProjectConfig.extensionVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation(project(":core:ui"))
    implementation(project(":core:util"))
    implementation(project(":core:domain"))
    implementation(project(":data"))
    implementation(project(":feature:onboarding"))
    implementation(project(":feature:signin"))
    implementation(project(":feature:signup"))
    implementation(project(":feature:market"))
    implementation(project(":feature:favorites"))
    implementation(project(":feature:detail"))
    implementation(project(":feature:search"))
    implementation(project(":feature:portfolio"))
    implementation(project(":feature:settings"))

    implementation libs.android.core.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.activity.compose
    implementation libs.compose.ui
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.material
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.4.3"
    debugImplementation "androidx.compose.ui:ui-tooling:1.4.3"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.4.3"

    // Retrofit
    implementation libs.retrofit
    implementation libs.retrofit.converter

    // Dependency Injection - Hilt
    implementation libs.hilt.android
    implementation libs.hilt.common
    kapt libs.dagger.hilt.compiler
    kapt libs.hilt.compiler
    implementation libs.hilt.work
    implementation libs.hilt.navigation.compose

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.0.2')
    implementation libs.firebase.firestore
    implementation libs.firebase.auth

    // Room
    implementation libs.room.runtime
    kapt libs.room.compiler
    implementation libs.room.ktx

    // Coroutines
    implementation libs.coroutine.core
    implementation libs.coroutine.android

    // Coroutine Lifecycle Scopes
    implementation libs.lifecycle.viewmodel
    implementation libs.lifecycle.runtime

    // Navigation Compose
    implementation libs.navigation.compose

    // DataStore Preferences
    implementation libs.datastore.preferences

    // Pager and Indicator
    implementation libs.accompanist.pager
    implementation libs.accompanist.pager.indicator

    // Swipe Refresh
    implementation libs.accompanist.swiperefresh

    // WorkManager
    implementation libs.work.manager

}

kapt {
    correctErrorTypes true
}